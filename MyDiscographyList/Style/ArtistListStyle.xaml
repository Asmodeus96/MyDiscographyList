<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- DataGrid style -->
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{DynamicResource RowStyle}"/>
        <Setter Property="CellStyle" Value="{DynamicResource CellStyle}"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Black" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
					        BorderThickness="{TemplateBinding BorderThickness}"
					        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
										                                Grid.Column="0"
										                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
										                        Grid.Row="1"
										                        Grid.ColumnSpan="1"
										                        CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar x:Name="PART_VerticalScrollBar"
										           Grid.Row="0"
                                                   Grid.RowSpan="2"
										           Grid.Column="1"
										           Maximum="{TemplateBinding ScrollableHeight}"
										           Orientation="Vertical"
										           Style="{DynamicResource MyScrollBar}"
										           ViewportSize="{TemplateBinding ViewportHeight}"
										           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
										           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- DataGridColumnHeader style -->
    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="Orange" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Transparent"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Orange"/>
        <Setter Property="BorderThickness" Value="1,2,1,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>


    <!-- DataGridRow style -->
    <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Orange"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Height" Value="35"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="Orange" Opacity="0.15"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- DataGridCell style -->
    <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="Orange" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    



   


    <!-- Delete Button style -->
    <Style x:Key="DeleteBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" 
                            Width="30"
                            Height="30" 
                            Cursor="Hand"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="0" 
                            Background="Transparent" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="1" Direction="-90" Color="Orange"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Scrollbar Buttons  -->
    <Style x:Key="ScrollButtons" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Background="#2E333A">
                        <ContentPresenter Name="ContentPresenter"
						                  HorizontalAlignment="Center"
						                  VerticalAlignment="Center"
						                  Content="{TemplateBinding Content}"
						                  ContentTemplate="{TemplateBinding ContentTemplate}"
						                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Scrollbar Thumbs  -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="OrangeRed" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Name="Grid">
                        <Rectangle Name="Rectangle1"
						           Width="7"
						           Height="Auto"
						           HorizontalAlignment="Stretch"
						           VerticalAlignment="Stretch"
						           Fill="{TemplateBinding Background}"
						           RadiusX="4"
						           RadiusY="4" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Scrollbar  -->
    <Style x:Key="MyScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#2E333A" Opacity="0.6"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
					      Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}"
					      Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.1*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="DecreaseRepeat"
						              Command="ScrollBar.LineUpCommand"
						              Style="{DynamicResource ScrollButtons}">
                            <Path x:Name="DecreaseArrow"
							      HorizontalAlignment="Center"
							      VerticalAlignment="Center"
							      Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
							      Fill="OrangeRed" />
                        </RepeatButton>
                        <Track x:Name="PART_Track"
						       Grid.Row="1"
						       Focusable="false"
						       IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
								       Background="OrangeRed"
								       Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp"
								              Command="ScrollBar.PageDownCommand"
								              Focusable="false"
								              Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown"
								              Command="ScrollBar.PageUpCommand"
								              Focusable="false"
								              Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton x:Name="IncreaseRepeat"
						              Grid.Row="2"
						              Command="ScrollBar.LineDownCommand"
						              Style="{DynamicResource ScrollButtons}">
                            <Path x:Name="IncreaseArrow"
							      HorizontalAlignment="Center"
							      VerticalAlignment="Center"
							      Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
							      Fill="OrangeRed" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="IncreaseRepeat" Property="IsMouseOver" Value="true">
                            <Setter TargetName="IncreaseArrow" Property="Fill" Value="darkred" />
                        </Trigger>
                        <Trigger SourceName="DecreaseRepeat" Property="IsMouseOver" Value="true">
                            <Setter TargetName="DecreaseArrow" Property="Fill" Value="darkred" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="Orange" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="DarkRed" />
                        </Trigger>
                        <Trigger SourceName="IncreaseRepeat" Property="IsPressed" Value="true">
                            <Setter TargetName="IncreaseArrow" Property="Fill" Value="red" />
                        </Trigger>
                        <Trigger SourceName="DecreaseRepeat" Property="IsPressed" Value="true">
                            <Setter TargetName="DecreaseArrow" Property="Fill" Value="red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- ItemControl Filter Style -->
    <Style x:Key="ItemControlFilterStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
    </Style>

    <!-- ToggleModuleClass Buttons Style -->
    <Style x:Key="ToggleModuleClass" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Orange"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="modBtn"
                            CornerRadius="5" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"  >
                        <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              Focusable="False"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="modBtn">
                                <Setter.Value>
                                    <SolidColorBrush Color="Gray" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="modBtn">
                                <Setter.Value>
                                    <SolidColorBrush Color="#404D5B" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="modBtn">
                                <Setter.Value>
                                    <SolidColorBrush Color="OrangeRed" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>